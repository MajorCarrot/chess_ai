package chess.gui;

import chess.ai.aiNew;
import chess.help.helper;
import java.awt.Color;
import javax.swing.*;
import java.util.*;

/**
 * This is the GUI with which the user interacts
 *
 * @author Adithya
 */
public class GamePage extends javax.swing.JFrame {

    /**
     * Creates new form GamePage2Player
     */
    public GamePage() {
        initComponents();
        mapperIcon();
        iconAdd();
        mapper();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        a1 = new javax.swing.JLabel();
        a3 = new javax.swing.JLabel();
        a2 = new javax.swing.JLabel();
        b1 = new javax.swing.JLabel();
        b3 = new javax.swing.JLabel();
        b2 = new javax.swing.JLabel();
        a4 = new javax.swing.JLabel();
        a6 = new javax.swing.JLabel();
        a5 = new javax.swing.JLabel();
        b4 = new javax.swing.JLabel();
        b6 = new javax.swing.JLabel();
        b5 = new javax.swing.JLabel();
        a8 = new javax.swing.JLabel();
        a7 = new javax.swing.JLabel();
        b8 = new javax.swing.JLabel();
        b7 = new javax.swing.JLabel();
        g1 = new javax.swing.JLabel();
        g3 = new javax.swing.JLabel();
        g2 = new javax.swing.JLabel();
        h1 = new javax.swing.JLabel();
        h3 = new javax.swing.JLabel();
        h2 = new javax.swing.JLabel();
        g4 = new javax.swing.JLabel();
        g6 = new javax.swing.JLabel();
        g5 = new javax.swing.JLabel();
        h4 = new javax.swing.JLabel();
        h6 = new javax.swing.JLabel();
        h5 = new javax.swing.JLabel();
        g8 = new javax.swing.JLabel();
        g7 = new javax.swing.JLabel();
        h8 = new javax.swing.JLabel();
        h7 = new javax.swing.JLabel();
        c1 = new javax.swing.JLabel();
        c3 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();
        d1 = new javax.swing.JLabel();
        d3 = new javax.swing.JLabel();
        d2 = new javax.swing.JLabel();
        c4 = new javax.swing.JLabel();
        c6 = new javax.swing.JLabel();
        c5 = new javax.swing.JLabel();
        d4 = new javax.swing.JLabel();
        d6 = new javax.swing.JLabel();
        d5 = new javax.swing.JLabel();
        c8 = new javax.swing.JLabel();
        c7 = new javax.swing.JLabel();
        d8 = new javax.swing.JLabel();
        d7 = new javax.swing.JLabel();
        e1 = new javax.swing.JLabel();
        e3 = new javax.swing.JLabel();
        e2 = new javax.swing.JLabel();
        f1 = new javax.swing.JLabel();
        f3 = new javax.swing.JLabel();
        f2 = new javax.swing.JLabel();
        e4 = new javax.swing.JLabel();
        e6 = new javax.swing.JLabel();
        e5 = new javax.swing.JLabel();
        f4 = new javax.swing.JLabel();
        f6 = new javax.swing.JLabel();
        f5 = new javax.swing.JLabel();
        e8 = new javax.swing.JLabel();
        e7 = new javax.swing.JLabel();
        f8 = new javax.swing.JLabel();
        f7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        wt1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        bt1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();
        newGame = new javax.swing.JMenuItem();
        undoMenu = new javax.swing.JMenuItem();
        restart = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        defaultColor = new javax.swing.JMenuItem();
        blackWhite = new javax.swing.JMenuItem();
        blueBlush = new javax.swing.JMenuItem();
        greenGone = new javax.swing.JMenuItem();
        yellowBrown = new javax.swing.JMenuItem();
        custom = new javax.swing.JMenuItem();

        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(null);

        a1.setBackground(new java.awt.Color(255, 204, 204));
        a1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a1.setForeground(new java.awt.Color(255, 204, 204));
        a1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a1.setOpaque(true);
        a1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a1MouseClicked(evt);
            }
        });
        getContentPane().add(a1);
        a1.setBounds(0, 0, 70, 70);

        a3.setBackground(new java.awt.Color(255, 204, 204));
        a3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a3.setForeground(new java.awt.Color(255, 204, 204));
        a3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a3.setOpaque(true);
        a3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a3MouseClicked(evt);
            }
        });
        getContentPane().add(a3);
        a3.setBounds(0, 140, 70, 70);

        a2.setBackground(new java.awt.Color(145, 51, 51));
        a2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a2.setForeground(new java.awt.Color(145, 50, 50));
        a2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a2.setOpaque(true);
        a2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a2MouseClicked(evt);
            }
        });
        getContentPane().add(a2);
        a2.setBounds(0, 70, 70, 70);

        b1.setBackground(new java.awt.Color(145, 51, 51));
        b1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b1.setForeground(new java.awt.Color(145, 50, 50));
        b1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b1.setOpaque(true);
        b1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b1MouseClicked(evt);
            }
        });
        getContentPane().add(b1);
        b1.setBounds(70, 0, 70, 70);

        b3.setBackground(new java.awt.Color(145, 51, 51));
        b3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b3.setForeground(new java.awt.Color(145, 50, 50));
        b3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b3.setOpaque(true);
        b3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b3MouseClicked(evt);
            }
        });
        getContentPane().add(b3);
        b3.setBounds(70, 140, 70, 70);

        b2.setBackground(new java.awt.Color(255, 204, 204));
        b2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b2.setForeground(new java.awt.Color(255, 204, 204));
        b2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b2.setOpaque(true);
        b2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b2MouseClicked(evt);
            }
        });
        getContentPane().add(b2);
        b2.setBounds(70, 70, 70, 70);

        a4.setBackground(new java.awt.Color(145, 51, 51));
        a4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a4.setForeground(new java.awt.Color(145, 50, 50));
        a4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a4.setOpaque(true);
        a4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a4MouseClicked(evt);
            }
        });
        getContentPane().add(a4);
        a4.setBounds(0, 210, 70, 70);

        a6.setBackground(new java.awt.Color(145, 51, 51));
        a6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a6.setForeground(new java.awt.Color(145, 50, 50));
        a6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a6.setOpaque(true);
        a6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a6MouseClicked(evt);
            }
        });
        getContentPane().add(a6);
        a6.setBounds(0, 350, 70, 70);

        a5.setBackground(new java.awt.Color(255, 204, 204));
        a5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a5.setForeground(new java.awt.Color(255, 204, 204));
        a5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a5.setOpaque(true);
        a5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a5MouseClicked(evt);
            }
        });
        getContentPane().add(a5);
        a5.setBounds(0, 280, 70, 70);

        b4.setBackground(new java.awt.Color(255, 204, 204));
        b4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b4.setForeground(new java.awt.Color(255, 204, 204));
        b4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b4.setOpaque(true);
        b4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b4MouseClicked(evt);
            }
        });
        getContentPane().add(b4);
        b4.setBounds(70, 210, 70, 70);

        b6.setBackground(new java.awt.Color(255, 204, 204));
        b6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b6.setForeground(new java.awt.Color(255, 204, 204));
        b6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b6.setOpaque(true);
        b6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b6MouseClicked(evt);
            }
        });
        getContentPane().add(b6);
        b6.setBounds(70, 350, 70, 70);

        b5.setBackground(new java.awt.Color(145, 51, 51));
        b5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b5.setForeground(new java.awt.Color(145, 50, 50));
        b5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b5.setOpaque(true);
        b5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b5MouseClicked(evt);
            }
        });
        getContentPane().add(b5);
        b5.setBounds(70, 280, 70, 70);

        a8.setBackground(new java.awt.Color(145, 50, 50));
        a8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a8.setForeground(new java.awt.Color(145, 50, 50));
        a8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a8.setOpaque(true);
        a8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a8MouseClicked(evt);
            }
        });
        getContentPane().add(a8);
        a8.setBounds(0, 490, 70, 70);

        a7.setBackground(new java.awt.Color(255, 204, 204));
        a7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a7.setForeground(new java.awt.Color(255, 204, 204));
        a7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        a7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        a7.setOpaque(true);
        a7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a7MouseClicked(evt);
            }
        });
        getContentPane().add(a7);
        a7.setBounds(0, 420, 70, 70);

        b8.setBackground(new java.awt.Color(255, 204, 204));
        b8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b8.setForeground(new java.awt.Color(255, 204, 204));
        b8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b8.setOpaque(true);
        b8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b8MouseClicked(evt);
            }
        });
        getContentPane().add(b8);
        b8.setBounds(70, 490, 70, 70);

        b7.setBackground(new java.awt.Color(145, 51, 51));
        b7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b7.setForeground(new java.awt.Color(145, 50, 50));
        b7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        b7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        b7.setOpaque(true);
        b7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b7MouseClicked(evt);
            }
        });
        getContentPane().add(b7);
        b7.setBounds(70, 420, 70, 70);

        g1.setBackground(new java.awt.Color(255, 204, 204));
        g1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g1.setForeground(new java.awt.Color(255, 204, 204));
        g1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g1.setOpaque(true);
        g1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g1MouseClicked(evt);
            }
        });
        getContentPane().add(g1);
        g1.setBounds(420, 0, 70, 70);

        g3.setBackground(new java.awt.Color(255, 204, 204));
        g3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g3.setForeground(new java.awt.Color(255, 204, 204));
        g3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g3.setOpaque(true);
        g3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g3MouseClicked(evt);
            }
        });
        getContentPane().add(g3);
        g3.setBounds(420, 140, 70, 70);

        g2.setBackground(new java.awt.Color(145, 51, 51));
        g2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g2.setForeground(new java.awt.Color(145, 50, 50));
        g2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g2.setOpaque(true);
        g2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g2MouseClicked(evt);
            }
        });
        getContentPane().add(g2);
        g2.setBounds(420, 70, 70, 70);

        h1.setBackground(new java.awt.Color(145, 51, 51));
        h1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h1.setForeground(new java.awt.Color(145, 50, 50));
        h1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h1.setOpaque(true);
        h1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h1MouseClicked(evt);
            }
        });
        getContentPane().add(h1);
        h1.setBounds(490, 0, 70, 70);

        h3.setBackground(new java.awt.Color(145, 51, 51));
        h3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h3.setForeground(new java.awt.Color(145, 50, 50));
        h3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h3.setOpaque(true);
        h3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h3MouseClicked(evt);
            }
        });
        getContentPane().add(h3);
        h3.setBounds(490, 140, 70, 70);

        h2.setBackground(new java.awt.Color(255, 204, 204));
        h2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h2.setForeground(new java.awt.Color(255, 204, 204));
        h2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h2.setOpaque(true);
        h2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h2MouseClicked(evt);
            }
        });
        getContentPane().add(h2);
        h2.setBounds(490, 70, 70, 70);

        g4.setBackground(new java.awt.Color(145, 51, 51));
        g4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g4.setForeground(new java.awt.Color(145, 50, 50));
        g4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g4.setOpaque(true);
        g4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g4MouseClicked(evt);
            }
        });
        getContentPane().add(g4);
        g4.setBounds(420, 210, 70, 70);

        g6.setBackground(new java.awt.Color(145, 51, 51));
        g6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g6.setForeground(new java.awt.Color(145, 50, 50));
        g6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g6.setOpaque(true);
        g6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g6MouseClicked(evt);
            }
        });
        getContentPane().add(g6);
        g6.setBounds(420, 350, 70, 70);

        g5.setBackground(new java.awt.Color(255, 204, 204));
        g5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g5.setForeground(new java.awt.Color(255, 204, 204));
        g5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g5.setOpaque(true);
        g5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g5MouseClicked(evt);
            }
        });
        getContentPane().add(g5);
        g5.setBounds(420, 280, 70, 70);

        h4.setBackground(new java.awt.Color(255, 204, 204));
        h4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h4.setForeground(new java.awt.Color(255, 204, 204));
        h4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h4.setOpaque(true);
        h4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h4MouseClicked(evt);
            }
        });
        getContentPane().add(h4);
        h4.setBounds(490, 210, 70, 70);

        h6.setBackground(new java.awt.Color(255, 204, 204));
        h6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h6.setForeground(new java.awt.Color(255, 204, 204));
        h6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h6.setOpaque(true);
        h6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h6MouseClicked(evt);
            }
        });
        getContentPane().add(h6);
        h6.setBounds(490, 350, 70, 70);

        h5.setBackground(new java.awt.Color(145, 51, 51));
        h5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h5.setForeground(new java.awt.Color(145, 50, 50));
        h5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h5.setOpaque(true);
        h5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h5MouseClicked(evt);
            }
        });
        getContentPane().add(h5);
        h5.setBounds(490, 280, 70, 70);

        g8.setBackground(new java.awt.Color(145, 51, 51));
        g8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g8.setForeground(new java.awt.Color(145, 50, 50));
        g8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g8.setOpaque(true);
        g8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g8MouseClicked(evt);
            }
        });
        getContentPane().add(g8);
        g8.setBounds(420, 490, 70, 70);

        g7.setBackground(new java.awt.Color(255, 204, 204));
        g7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        g7.setForeground(new java.awt.Color(255, 204, 204));
        g7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        g7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        g7.setOpaque(true);
        g7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g7MouseClicked(evt);
            }
        });
        getContentPane().add(g7);
        g7.setBounds(420, 420, 70, 70);

        h8.setBackground(new java.awt.Color(255, 204, 204));
        h8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h8.setForeground(new java.awt.Color(255, 204, 204));
        h8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h8.setOpaque(true);
        h8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h8MouseClicked(evt);
            }
        });
        getContentPane().add(h8);
        h8.setBounds(490, 490, 70, 70);

        h7.setBackground(new java.awt.Color(145, 51, 51));
        h7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        h7.setForeground(new java.awt.Color(145, 50, 50));
        h7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        h7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        h7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        h7.setOpaque(true);
        h7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h7MouseClicked(evt);
            }
        });
        getContentPane().add(h7);
        h7.setBounds(490, 420, 70, 70);

        c1.setBackground(new java.awt.Color(255, 204, 204));
        c1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c1.setForeground(new java.awt.Color(255, 204, 204));
        c1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c1.setOpaque(true);
        c1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1MouseClicked(evt);
            }
        });
        getContentPane().add(c1);
        c1.setBounds(140, 0, 70, 70);

        c3.setBackground(new java.awt.Color(255, 204, 204));
        c3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c3.setForeground(new java.awt.Color(255, 204, 204));
        c3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c3.setOpaque(true);
        c3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c3MouseClicked(evt);
            }
        });
        getContentPane().add(c3);
        c3.setBounds(140, 140, 70, 70);

        c2.setBackground(new java.awt.Color(145, 50, 50));
        c2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c2.setForeground(new java.awt.Color(145, 50, 50));
        c2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c2.setOpaque(true);
        c2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2MouseClicked(evt);
            }
        });
        getContentPane().add(c2);
        c2.setBounds(140, 70, 70, 70);

        d1.setBackground(new java.awt.Color(145, 51, 51));
        d1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d1.setForeground(new java.awt.Color(145, 50, 50));
        d1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d1.setOpaque(true);
        d1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d1MouseClicked(evt);
            }
        });
        getContentPane().add(d1);
        d1.setBounds(210, 0, 70, 70);

        d3.setBackground(new java.awt.Color(145, 51, 51));
        d3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d3.setForeground(new java.awt.Color(145, 50, 50));
        d3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d3.setOpaque(true);
        d3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d3MouseClicked(evt);
            }
        });
        getContentPane().add(d3);
        d3.setBounds(210, 140, 70, 70);

        d2.setBackground(new java.awt.Color(255, 204, 204));
        d2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d2.setForeground(new java.awt.Color(255, 204, 204));
        d2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d2.setOpaque(true);
        d2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d2MouseClicked(evt);
            }
        });
        getContentPane().add(d2);
        d2.setBounds(210, 70, 70, 70);

        c4.setBackground(new java.awt.Color(145, 51, 51));
        c4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c4.setForeground(new java.awt.Color(145, 50, 50));
        c4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c4.setOpaque(true);
        c4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c4MouseClicked(evt);
            }
        });
        getContentPane().add(c4);
        c4.setBounds(140, 210, 70, 70);

        c6.setBackground(new java.awt.Color(145, 51, 51));
        c6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c6.setForeground(new java.awt.Color(145, 50, 50));
        c6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c6.setOpaque(true);
        c6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c6MouseClicked(evt);
            }
        });
        getContentPane().add(c6);
        c6.setBounds(140, 350, 70, 70);

        c5.setBackground(new java.awt.Color(255, 204, 204));
        c5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c5.setForeground(new java.awt.Color(255, 204, 204));
        c5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c5.setOpaque(true);
        c5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c5MouseClicked(evt);
            }
        });
        getContentPane().add(c5);
        c5.setBounds(140, 280, 70, 70);

        d4.setBackground(new java.awt.Color(255, 204, 204));
        d4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d4.setForeground(new java.awt.Color(255, 204, 204));
        d4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d4.setOpaque(true);
        d4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d4MouseClicked(evt);
            }
        });
        getContentPane().add(d4);
        d4.setBounds(210, 210, 70, 70);

        d6.setBackground(new java.awt.Color(255, 204, 204));
        d6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d6.setForeground(new java.awt.Color(255, 204, 204));
        d6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d6.setOpaque(true);
        d6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d6MouseClicked(evt);
            }
        });
        getContentPane().add(d6);
        d6.setBounds(210, 350, 70, 70);

        d5.setBackground(new java.awt.Color(145, 50, 50));
        d5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d5.setForeground(new java.awt.Color(145, 50, 50));
        d5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d5.setOpaque(true);
        d5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d5MouseClicked(evt);
            }
        });
        getContentPane().add(d5);
        d5.setBounds(210, 280, 70, 70);

        c8.setBackground(new java.awt.Color(145, 51, 51));
        c8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c8.setForeground(new java.awt.Color(145, 50, 50));
        c8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c8.setOpaque(true);
        c8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c8MouseClicked(evt);
            }
        });
        getContentPane().add(c8);
        c8.setBounds(140, 490, 70, 70);

        c7.setBackground(new java.awt.Color(255, 204, 204));
        c7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        c7.setForeground(new java.awt.Color(255, 204, 204));
        c7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        c7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        c7.setOpaque(true);
        c7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c7MouseClicked(evt);
            }
        });
        getContentPane().add(c7);
        c7.setBounds(140, 420, 70, 70);

        d8.setBackground(new java.awt.Color(255, 204, 204));
        d8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d8.setForeground(new java.awt.Color(255, 204, 204));
        d8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d8.setOpaque(true);
        d8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d8MouseClicked(evt);
            }
        });
        getContentPane().add(d8);
        d8.setBounds(210, 490, 70, 70);

        d7.setBackground(new java.awt.Color(145, 51, 51));
        d7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        d7.setForeground(new java.awt.Color(145, 50, 50));
        d7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        d7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        d7.setOpaque(true);
        d7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d7MouseClicked(evt);
            }
        });
        getContentPane().add(d7);
        d7.setBounds(210, 420, 70, 70);

        e1.setBackground(new java.awt.Color(255, 204, 204));
        e1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e1.setForeground(new java.awt.Color(255, 204, 204));
        e1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e1.setOpaque(true);
        e1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e1MouseClicked(evt);
            }
        });
        getContentPane().add(e1);
        e1.setBounds(280, 0, 70, 70);

        e3.setBackground(new java.awt.Color(255, 204, 204));
        e3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e3.setForeground(new java.awt.Color(255, 204, 204));
        e3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e3.setOpaque(true);
        e3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e3MouseClicked(evt);
            }
        });
        getContentPane().add(e3);
        e3.setBounds(280, 140, 70, 70);

        e2.setBackground(new java.awt.Color(145, 51, 51));
        e2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e2.setForeground(new java.awt.Color(145, 50, 50));
        e2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e2.setOpaque(true);
        e2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e2MouseClicked(evt);
            }
        });
        getContentPane().add(e2);
        e2.setBounds(280, 70, 70, 70);

        f1.setBackground(new java.awt.Color(145, 51, 51));
        f1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f1.setForeground(new java.awt.Color(145, 50, 50));
        f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f1.setOpaque(true);
        f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f1MouseClicked(evt);
            }
        });
        getContentPane().add(f1);
        f1.setBounds(350, 0, 70, 70);

        f3.setBackground(new java.awt.Color(145, 51, 51));
        f3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f3.setForeground(new java.awt.Color(145, 50, 50));
        f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f3.setOpaque(true);
        f3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f3MouseClicked(evt);
            }
        });
        getContentPane().add(f3);
        f3.setBounds(350, 140, 70, 70);

        f2.setBackground(new java.awt.Color(255, 204, 204));
        f2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f2.setForeground(new java.awt.Color(255, 204, 204));
        f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f2.setOpaque(true);
        f2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f2MouseClicked(evt);
            }
        });
        getContentPane().add(f2);
        f2.setBounds(350, 70, 70, 70);

        e4.setBackground(new java.awt.Color(145, 50, 50));
        e4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e4.setOpaque(true);
        e4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e4MouseClicked(evt);
            }
        });
        getContentPane().add(e4);
        e4.setBounds(280, 210, 70, 70);

        e6.setBackground(new java.awt.Color(145, 51, 51));
        e6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e6.setForeground(new java.awt.Color(145, 50, 50));
        e6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e6.setOpaque(true);
        e6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e6MouseClicked(evt);
            }
        });
        getContentPane().add(e6);
        e6.setBounds(280, 350, 70, 70);

        e5.setBackground(new java.awt.Color(255, 204, 204));
        e5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e5.setForeground(new java.awt.Color(255, 204, 204));
        e5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e5.setOpaque(true);
        e5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e5MouseClicked(evt);
            }
        });
        getContentPane().add(e5);
        e5.setBounds(280, 280, 70, 70);

        f4.setBackground(new java.awt.Color(255, 204, 204));
        f4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f4.setForeground(new java.awt.Color(255, 204, 204));
        f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f4.setOpaque(true);
        f4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f4MouseClicked(evt);
            }
        });
        getContentPane().add(f4);
        f4.setBounds(350, 210, 70, 70);

        f6.setBackground(new java.awt.Color(255, 204, 204));
        f6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f6.setForeground(new java.awt.Color(255, 204, 204));
        f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f6.setOpaque(true);
        f6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f6MouseClicked(evt);
            }
        });
        getContentPane().add(f6);
        f6.setBounds(350, 350, 70, 70);

        f5.setBackground(new java.awt.Color(145, 51, 51));
        f5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f5.setForeground(new java.awt.Color(145, 50, 50));
        f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f5.setOpaque(true);
        f5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f5MouseClicked(evt);
            }
        });
        getContentPane().add(f5);
        f5.setBounds(350, 280, 70, 70);

        e8.setBackground(new java.awt.Color(145, 51, 51));
        e8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e8.setForeground(new java.awt.Color(145, 50, 50));
        e8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e8.setOpaque(true);
        e8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e8MouseClicked(evt);
            }
        });
        getContentPane().add(e8);
        e8.setBounds(280, 490, 70, 70);

        e7.setBackground(new java.awt.Color(255, 204, 204));
        e7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        e7.setForeground(new java.awt.Color(255, 204, 204));
        e7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        e7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        e7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        e7.setOpaque(true);
        e7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e7MouseClicked(evt);
            }
        });
        getContentPane().add(e7);
        e7.setBounds(280, 420, 70, 70);

        f8.setBackground(new java.awt.Color(255, 204, 204));
        f8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f8.setForeground(new java.awt.Color(255, 204, 204));
        f8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f8.setOpaque(true);
        f8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f8MouseClicked(evt);
            }
        });
        getContentPane().add(f8);
        f8.setBounds(350, 490, 70, 70);

        f7.setBackground(new java.awt.Color(145, 51, 51));
        f7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        f7.setForeground(new java.awt.Color(145, 50, 50));
        f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        f7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        f7.setOpaque(true);
        f7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f7MouseClicked(evt);
            }
        });
        getContentPane().add(f7);
        f7.setBounds(350, 420, 70, 70);

        wt1.setEditable(false);
        wt1.setBackground(new java.awt.Color(255, 204, 204));
        wt1.setColumns(20);
        wt1.setLineWrap(true);
        wt1.setRows(5);
        wt1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(wt1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(570, 10, 200, 230);

        bt1.setEditable(false);
        bt1.setBackground(new java.awt.Color(145, 51, 51));
        bt1.setColumns(20);
        bt1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bt1.setForeground(new java.awt.Color(255, 255, 255));
        bt1.setLineWrap(true);
        bt1.setRows(5);
        bt1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(bt1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(570, 320, 200, 230);

        file.setText("File");

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        newGame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newGame.setText("New Game");
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameActionPerformed(evt);
            }
        });
        file.add(newGame);

        undoMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undoMenu.setText("Undo");
        undoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoMenuActionPerformed(evt);
            }
        });
        file.add(undoMenu);

        restart.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        restart.setText("Restart");
        restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartActionPerformed(evt);
            }
        });
        file.add(restart);

        jMenuBar1.add(file);

        edit.setText("Edit");

        jMenu3.setText("Color Change");

        defaultColor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        defaultColor.setText("Default");
        defaultColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultColorActionPerformed(evt);
            }
        });
        jMenu3.add(defaultColor);

        blackWhite.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        blackWhite.setText("Black and White");
        blackWhite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackWhiteActionPerformed(evt);
            }
        });
        jMenu3.add(blackWhite);

        blueBlush.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        blueBlush.setText("Blue Blush");
        blueBlush.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueBlushActionPerformed(evt);
            }
        });
        jMenu3.add(blueBlush);

        greenGone.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        greenGone.setText("Green Gone");
        greenGone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenGoneActionPerformed(evt);
            }
        });
        jMenu3.add(greenGone);

        yellowBrown.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        yellowBrown.setText("Yellow Brown");
        yellowBrown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yellowBrownActionPerformed(evt);
            }
        });
        jMenu3.add(yellowBrown);

        custom.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        custom.setText("Custom");
        custom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customActionPerformed(evt);
            }
        });
        jMenu3.add(custom);

        edit.add(jMenu3);

        jMenuBar1.add(edit);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * The following series of MouseEvents work based on click. When they are
     * clicked, they pass info regarding the position of click to the parser and
     * hence initiate the move!!
     */
    private void a3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a3MouseClicked
        countPart++;
        a3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 3);

    }//GEN-LAST:event_a3MouseClicked

    private void a1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a1MouseClicked
        countPart++;
        a1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 1);
    }//GEN-LAST:event_a1MouseClicked

    private void a2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a2MouseClicked
        countPart++;
        a2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 2);

    }//GEN-LAST:event_a2MouseClicked

    private void a4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a4MouseClicked
        countPart++;
        a4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 4);

    }//GEN-LAST:event_a4MouseClicked

    private void a5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MouseClicked
        countPart++;
        a5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 5);

    }//GEN-LAST:event_a5MouseClicked

    private void a6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a6MouseClicked
        countPart++;
        a6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 6);

    }//GEN-LAST:event_a6MouseClicked

    private void a7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a7MouseClicked
        countPart++;
        a7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 7);

    }//GEN-LAST:event_a7MouseClicked

    private void a8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a8MouseClicked
        countPart++;
        a8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('a', 8);

    }//GEN-LAST:event_a8MouseClicked

    private void b1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b1MouseClicked
        countPart++;
        b1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 1);

    }//GEN-LAST:event_b1MouseClicked

    private void b2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b2MouseClicked
        countPart++;
        b2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 2);

    }//GEN-LAST:event_b2MouseClicked

    private void b3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b3MouseClicked
        countPart++;
        b3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 3);

    }//GEN-LAST:event_b3MouseClicked

    private void b4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b4MouseClicked
        countPart++;
        b4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 4);

    }//GEN-LAST:event_b4MouseClicked

    private void b5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b5MouseClicked
        countPart++;
        b5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 5);

    }//GEN-LAST:event_b5MouseClicked

    private void b6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b6MouseClicked
        countPart++;
        b6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 6);

    }//GEN-LAST:event_b6MouseClicked

    private void b7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b7MouseClicked
        countPart++;
        b7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 7);

    }//GEN-LAST:event_b7MouseClicked

    private void b8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b8MouseClicked
        countPart++;
        b8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('b', 8);

    }//GEN-LAST:event_b8MouseClicked

    private void c1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseClicked
        countPart++;
        c1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 1);

    }//GEN-LAST:event_c1MouseClicked

    private void c2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2MouseClicked
        countPart++;
        c2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 2);

    }//GEN-LAST:event_c2MouseClicked

    private void c3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3MouseClicked
        countPart++;
        c3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 3);

    }//GEN-LAST:event_c3MouseClicked

    private void c4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4MouseClicked
        countPart++;
        c4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 4);

    }//GEN-LAST:event_c4MouseClicked

    private void c5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c5MouseClicked
        countPart++;
        c5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 5);

    }//GEN-LAST:event_c5MouseClicked

    private void c6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c6MouseClicked
        countPart++;
        c6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 6);

    }//GEN-LAST:event_c6MouseClicked

    private void c7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c7MouseClicked
        countPart++;
        c7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 7);

    }//GEN-LAST:event_c7MouseClicked

    private void c8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c8MouseClicked
        countPart++;
        c8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('c', 8);

    }//GEN-LAST:event_c8MouseClicked

    private void d1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d1MouseClicked
        countPart++;
        d1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 1);

    }//GEN-LAST:event_d1MouseClicked

    private void d2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d2MouseClicked
        countPart++;
        d2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 2);

    }//GEN-LAST:event_d2MouseClicked

    private void d3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d3MouseClicked
        countPart++;
        d3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 3);

    }//GEN-LAST:event_d3MouseClicked

    private void d4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d4MouseClicked
        countPart++;
        d4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 4);

    }//GEN-LAST:event_d4MouseClicked

    private void d5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d5MouseClicked
        countPart++;
        d5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 5);

    }//GEN-LAST:event_d5MouseClicked

    private void d6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d6MouseClicked
        countPart++;
        d6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 6);

    }//GEN-LAST:event_d6MouseClicked

    private void d7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d7MouseClicked
        countPart++;
        d7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 7);

    }//GEN-LAST:event_d7MouseClicked

    private void d8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d8MouseClicked
        countPart++;
        d8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('d', 8);

    }//GEN-LAST:event_d8MouseClicked

    private void e1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e1MouseClicked
        countPart++;
        e1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 1);

    }//GEN-LAST:event_e1MouseClicked

    private void e2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e2MouseClicked
        countPart++;
        e2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 2);

    }//GEN-LAST:event_e2MouseClicked

    private void e3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e3MouseClicked
        countPart++;
        e3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 3);

    }//GEN-LAST:event_e3MouseClicked

    private void e4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e4MouseClicked
        countPart++;
        e4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 4);

    }//GEN-LAST:event_e4MouseClicked

    private void e5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e5MouseClicked
        countPart++;
        e5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 5);

    }//GEN-LAST:event_e5MouseClicked

    private void e6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e6MouseClicked
        countPart++;
        e6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 6);

    }//GEN-LAST:event_e6MouseClicked

    private void e7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e7MouseClicked
        countPart++;
        e7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 7);

    }//GEN-LAST:event_e7MouseClicked

    private void e8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e8MouseClicked
        countPart++;
        e8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('e', 8);

    }//GEN-LAST:event_e8MouseClicked

    private void f1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f1MouseClicked
        countPart++;
        f1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 1);

    }//GEN-LAST:event_f1MouseClicked

    private void f2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f2MouseClicked
        countPart++;
        f2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 2);

    }//GEN-LAST:event_f2MouseClicked

    private void f3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f3MouseClicked
        countPart++;
        f3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 3);

    }//GEN-LAST:event_f3MouseClicked

    private void f4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f4MouseClicked
        countPart++;
        f4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 4);

    }//GEN-LAST:event_f4MouseClicked

    private void f5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f5MouseClicked
        countPart++;
        f5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 5);

    }//GEN-LAST:event_f5MouseClicked

    private void f6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f6MouseClicked
        countPart++;
        f6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 6);

    }//GEN-LAST:event_f6MouseClicked

    private void f7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f7MouseClicked
        countPart++;
        f7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 7);

    }//GEN-LAST:event_f7MouseClicked

    private void f8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f8MouseClicked
        countPart++;
        f8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('f', 8);

    }//GEN-LAST:event_f8MouseClicked

    private void g1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g1MouseClicked
        countPart++;
        g1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 1);

    }//GEN-LAST:event_g1MouseClicked

    private void g2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g2MouseClicked
        countPart++;
        g2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 2);

    }//GEN-LAST:event_g2MouseClicked

    private void g3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g3MouseClicked
        countPart++;
        g3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 3);

    }//GEN-LAST:event_g3MouseClicked

    private void g4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g4MouseClicked
        countPart++;
        g4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 4);

    }//GEN-LAST:event_g4MouseClicked

    private void g5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g5MouseClicked
        countPart++;
        g5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 5);

    }//GEN-LAST:event_g5MouseClicked

    private void g6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g6MouseClicked
        countPart++;
        g6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 6);

    }//GEN-LAST:event_g6MouseClicked

    private void g7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g7MouseClicked
        countPart++;
        g7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 7);

    }//GEN-LAST:event_g7MouseClicked

    private void g8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g8MouseClicked
        countPart++;
        g8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('g', 8);

    }//GEN-LAST:event_g8MouseClicked

    private void h1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h1MouseClicked
        countPart++;
        h1.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 1);

    }//GEN-LAST:event_h1MouseClicked

    private void h2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h2MouseClicked
        countPart++;
        h2.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 2);

    }//GEN-LAST:event_h2MouseClicked

    private void h7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h7MouseClicked
        countPart++;
        h7.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 7);

    }//GEN-LAST:event_h7MouseClicked

    private void h3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h3MouseClicked
        countPart++;
        h3.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 3);

    }//GEN-LAST:event_h3MouseClicked

    private void h4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h4MouseClicked
        countPart++;
        h4.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 4);

    }//GEN-LAST:event_h4MouseClicked

    private void h5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h5MouseClicked
        countPart++;
        h5.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 5);

    }//GEN-LAST:event_h5MouseClicked

    private void h6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h6MouseClicked
        countPart++;
        h6.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 6);

    }//GEN-LAST:event_h6MouseClicked

    private void h8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h8MouseClicked
        countPart++;
        h8.setBorder(BorderFactory.createLineBorder(Color.yellow));
        parser('h', 8);

    }//GEN-LAST:event_h8MouseClicked

    private void newGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameActionPerformed
        GamePage r = new GamePage();
        r.setVisible(true);
    }//GEN-LAST:event_newGameActionPerformed

    private void undoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoMenuActionPerformed
        if (chessBoard.turn - 1 < 0) {
            JOptionPane.showMessageDialog(null, "You can't undo further");
            chessBoard.turn = 0;
        } else {
            this.curBoard.boardState = helper.undo(--chessBoard.turn, chessBoard.movesDone);
            helper.renderPosition(this.curBoard.boardState);
            displayInFrame();
        }
    }//GEN-LAST:event_undoMenuActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure you want to exit??") == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    private void restartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure you want to restart the game??") == 0) {
            countPart = 0;
            curMove = "";
            this.curBoard.boardState = helper.setter();
            chessBoard.turn = 0;
            displayInFrame();
            helper.renderPosition(this.curBoard.boardState);
            chessBoard.movesDone.clear();
            wt1.setText("");
            bt1.setText("");
        }
    }//GEN-LAST:event_restartActionPerformed

    private void yellowBrownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yellowBrownActionPerformed
        oldL = CUSTOM_L;
        oldD = CUSTOM_D;
        CUSTOM_L = YBColL;
        CUSTOM_D = YBColD;
        setColor();
    }//GEN-LAST:event_yellowBrownActionPerformed

    private void greenGoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenGoneActionPerformed
        oldL = CUSTOM_L;
        oldD = CUSTOM_D;
        CUSTOM_L = GGColL;
        CUSTOM_D = GGColD;
        setColor();
    }//GEN-LAST:event_greenGoneActionPerformed

    private void blueBlushActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueBlushActionPerformed
        oldL = CUSTOM_L;
        oldD = CUSTOM_D;
        CUSTOM_L = BBColL;
        CUSTOM_D = BBColD;
        setColor();
    }//GEN-LAST:event_blueBlushActionPerformed

    private void blackWhiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackWhiteActionPerformed
        oldL = CUSTOM_L;
        oldD = CUSTOM_D;
        CUSTOM_L = BWColL;
        CUSTOM_D = BWColD;
        setColor();
    }//GEN-LAST:event_blackWhiteActionPerformed

    private void defaultColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultColorActionPerformed
        oldL = CUSTOM_L;
        oldD = CUSTOM_D;
        CUSTOM_L = defColL;
        CUSTOM_D = defColD;
        setColor();
    }//GEN-LAST:event_defaultColorActionPerformed

    private void customActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customActionPerformed
        ColorChooser r = new ColorChooser();
        r.setVisible(true);
    }//GEN-LAST:event_customActionPerformed

    private String curMove = "";//stores the current move
    private int countPart = 0;//which part of move is it (1/2)
    private static final Map<String, JLabel> MAP_LABEL = new HashMap<>();//maps each label to a corresponding string
    private static final Map<String, String> MAP_STRING = new HashMap<>();//maps each icon address to the item name
    chessBoard curBoard = new chessBoard();//initiates a new chess.gui.chessBoard instance

    //the following lines define various colors from which the useer can select the one he/she wants
    private final Color defColD = new Color(145, 51, 51, 255);
    private final Color defColL = new Color(255, 204, 204, 255);
    private final Color BWColD = new Color(50, 50, 144, 255);
    private final Color BWColL = new Color(255, 255, 255, 255);
    private final Color BBColD = new Color(0, 51, 153, 255);
    private final Color BBColL = new Color(102, 153, 255, 255);
    private final Color GGColD = new Color(0, 102, 51, 255);
    private final Color GGColL = new Color(0, 204, 102, 255);
    private final Color YBColD = new Color(153, 51, 0, 255);
    private final Color YBColL = new Color(255, 255, 153, 255);
    public static Color CUSTOM_L = new Color(255, 204, 204, 255);
    public static Color CUSTOM_D = new Color(145, 51, 51, 255);
    public static Color oldL;
    public static Color oldD;

    public static boolean AIPlayer = true;
    public static final aiNew AI = new aiNew();

    /**
     * A function to map the label to String
     */
    final void mapper() {

        MAP_LABEL.put("a1", a1);
        MAP_LABEL.put("a2", a2);
        MAP_LABEL.put("a3", a3);
        MAP_LABEL.put("a4", a4);
        MAP_LABEL.put("a5", a5);
        MAP_LABEL.put("a6", a6);
        MAP_LABEL.put("a7", a7);
        MAP_LABEL.put("a8", a8);

        MAP_LABEL.put("b1", b1);
        MAP_LABEL.put("b2", b2);
        MAP_LABEL.put("b3", b3);
        MAP_LABEL.put("b4", b4);
        MAP_LABEL.put("b5", b5);
        MAP_LABEL.put("b6", b6);
        MAP_LABEL.put("b7", b7);
        MAP_LABEL.put("b8", b8);

        MAP_LABEL.put("c1", c1);
        MAP_LABEL.put("c2", c2);
        MAP_LABEL.put("c3", c3);
        MAP_LABEL.put("c4", c4);
        MAP_LABEL.put("c5", c5);
        MAP_LABEL.put("c6", c6);
        MAP_LABEL.put("c7", c7);
        MAP_LABEL.put("c8", c8);

        MAP_LABEL.put("d1", d1);
        MAP_LABEL.put("d2", d2);
        MAP_LABEL.put("d3", d3);
        MAP_LABEL.put("d4", d4);
        MAP_LABEL.put("d5", d5);
        MAP_LABEL.put("d6", d6);
        MAP_LABEL.put("d7", d7);
        MAP_LABEL.put("d8", d8);

        MAP_LABEL.put("e1", e1);
        MAP_LABEL.put("e2", e2);
        MAP_LABEL.put("e3", e3);
        MAP_LABEL.put("e4", e4);
        MAP_LABEL.put("e5", e5);
        MAP_LABEL.put("e6", e6);
        MAP_LABEL.put("e7", e7);
        MAP_LABEL.put("e8", e8);

        MAP_LABEL.put("f1", f1);
        MAP_LABEL.put("f2", f2);
        MAP_LABEL.put("f3", f3);
        MAP_LABEL.put("f4", f4);
        MAP_LABEL.put("f5", f5);
        MAP_LABEL.put("f6", f6);
        MAP_LABEL.put("f7", f7);
        MAP_LABEL.put("f8", f8);

        MAP_LABEL.put("g1", g1);
        MAP_LABEL.put("g2", g2);
        MAP_LABEL.put("g3", g3);
        MAP_LABEL.put("g4", g4);
        MAP_LABEL.put("g5", g5);
        MAP_LABEL.put("g6", g6);
        MAP_LABEL.put("g7", g7);
        MAP_LABEL.put("g8", g8);

        MAP_LABEL.put("h1", h1);
        MAP_LABEL.put("h2", h2);
        MAP_LABEL.put("h3", h3);
        MAP_LABEL.put("h4", h4);
        MAP_LABEL.put("h5", h5);
        MAP_LABEL.put("h6", h6);
        MAP_LABEL.put("h7", h7);
        MAP_LABEL.put("h8", h8);
    }

    /**
     * A function to map the icons to address
     */
    final void mapperIcon() {
        MAP_STRING.put("B Bishop", "src\\img\\bb.png");
        MAP_STRING.put("B King", "src\\img\\bk.png");
        MAP_STRING.put("B Knight", "src\\img\\bn.png");
        MAP_STRING.put("B Pawn", "src\\img\\bp.png");
        MAP_STRING.put("B Queen", "src\\img\\bq.png");
        MAP_STRING.put("B Rook", "src\\img\\br.png");

        MAP_STRING.put("W Bishop", "src\\img\\wb.png");
        MAP_STRING.put("W King", "src\\img\\wk.png");
        MAP_STRING.put("W Knight", "src\\img\\wn.png");
        MAP_STRING.put("W Pawn", "src\\img\\wp.png");
        MAP_STRING.put("W Queen", "src\\img\\wq.png");
        MAP_STRING.put("W Rook", "src\\img\\wr.png");
    }

    /**
     * Adds the icon in the beginning
     */
    final void iconAdd() {
        a1.setIcon(new ImageIcon(MAP_STRING.get("W Rook")));
        b1.setIcon(new ImageIcon(MAP_STRING.get("W Knight")));
        c1.setIcon(new ImageIcon(MAP_STRING.get("W Bishop")));
        d1.setIcon(new ImageIcon(MAP_STRING.get("W King")));
        e1.setIcon(new ImageIcon(MAP_STRING.get("W Queen")));
        f1.setIcon(new ImageIcon(MAP_STRING.get("W Bishop")));
        g1.setIcon(new ImageIcon(MAP_STRING.get("W Knight")));
        h1.setIcon(new ImageIcon(MAP_STRING.get("W Rook")));
        a2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));
        b2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));
        c2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));
        d2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));
        e2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));
        f2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));
        g2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));
        h2.setIcon(new ImageIcon(MAP_STRING.get("W Pawn")));

        a8.setIcon(new ImageIcon(MAP_STRING.get("B Rook")));
        b8.setIcon(new ImageIcon(MAP_STRING.get("B Knight")));
        c8.setIcon(new ImageIcon(MAP_STRING.get("B Bishop")));
        d8.setIcon(new ImageIcon(MAP_STRING.get("B King")));
        e8.setIcon(new ImageIcon(MAP_STRING.get("B Queen")));
        f8.setIcon(new ImageIcon(MAP_STRING.get("B Bishop")));
        g8.setIcon(new ImageIcon(MAP_STRING.get("B Knight")));
        h8.setIcon(new ImageIcon(MAP_STRING.get("B Rook")));
        a7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
        b7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
        c7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
        d7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
        e7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
        f7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
        g7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
        h7.setIcon(new ImageIcon(MAP_STRING.get("B Pawn")));
    }

    /**
     * It sets the color based on the colors chosen in custom or otherwise
     */
    public static void setColor() {
        int i = 0;
        int j = 0;
        while (i < 8) {
            while (j < 8) {
                String s = intToString(i, j);
                JLabel labeli = MAP_LABEL.get(s);
                if ((i + j) % 2 == 0) {
                    labeli.setBackground(CUSTOM_L);
                } else {
                    labeli.setBackground(CUSTOM_D);
                }
                j++;
            }
            i++;
            j = 0;
        }

        wt1.setBackground(CUSTOM_L);
        bt1.setBackground(CUSTOM_D);
    }

    /**
     * A parser for move made by user on the GUI (also redirects to chessBoard
     * to check if it is valid)
     *
     * @see chessBoard
     * @param column the character consisting of column (a,b,c...)
     * @param row the row NUMBER (NOT INDEX)
     */
    void parser(char column, int row) {
        try {
            if (countPart == 2) {
                curMove += column;
                curMove += row;
                System.out.println(this.curMove);
                boolean a = this.curBoard.executer(this.curMove);
                if (a) {//if move is valid
                    displayInFrame();
                    chessBoard.turn++;

                    //to update the text area containing the fallen pieces
                    if (this.curBoard.item != 0) {
                        if (chessBoard.turn % 2 == 1) {
                            wt1.append("B " + helper.intItemToString(this.curBoard.item) + "\n");
                        } else if (chessBoard.turn % 2 == 0) {
                            bt1.append("W " + helper.intItemToString(this.curBoard.item) + "\n");
                        }
                    }

                    //only if it is player vs AI it executes the following part
                    if (AIPlayer) {
                        AI.myAI(chessBoard.movesDone, chessBoard.turn);
                        if (!AI.aiMove.equals("")) {
                            JOptionPane.showMessageDialog(null, AI.aiMove);
                            parser(AI.aiMove);
                        } else {
                            JOptionPane.showMessageDialog(null, "I lose");
                            System.exit(0);
                        }
                    }
                }
                countPart = 0;

            } else {
                curMove = "";
                curMove += column;
                curMove += row;
                curMove += "->";
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            System.out.println(ex.getMessage());
        }
    }

    /**
     * A parser for the move made by AI
     *
     * @see chessBoard
     * @param s String containing the move (only for AI)
     */
    public void parser(String s) {
        System.out.println(s);
        boolean a = this.curBoard.executer(s);
        if (a) {
            displayInFrame();
            chessBoard.turn++;

            if (this.curBoard.item != 0) {
                if (chessBoard.turn % 2 == 1) {
                    wt1.append("B " + helper.intItemToString(this.curBoard.item) + "\n");
                } else if (chessBoard.turn % 2 == 0) {
                    bt1.append("W " + helper.intItemToString(this.curBoard.item) + "\n");
                }
            }
        } else {
            System.out.println("Problem in AI");
            JOptionPane.showMessageDialog(null, "Problem in AI");
        }
        AI.aiMove = "";
        countPart = 0;
    }

    /**
     * Displays the move by changing the icon on the GUI board
     */
    void displayInFrame() {
        for (int i = 0; i < 8; i++) {
            outer:
            for (int j = 0; j < 8; j++) {
                int n = this.curBoard.boardState[i][j];
                String s = intToString(i, j);

                JLabel labeli = MAP_LABEL.get(s);
                s = "";
                if (n % 10 == 1) {
                    s += "B ";
                } else if (n % 100 != 2) {
                    s += "W ";
                }

                if (n % 100 == 2) {
                    labeli.setBorder(null);
                    labeli.setIcon(null);
                    labeli.setText("");
                } else {
                    int item = n / 10 % 10;
                    //Bishop-1, King-2, Knight-3, Pawn-4, Queen-5, Rook-6
                    switch (item) {
                        case 1:
                            s += "Bishop";
                            break;
                        case 2:
                            s += "King";
                            break;
                        case 3:
                            s += "Knight";
                            break;
                        case 4:
                            s += "Pawn";
                            break;
                        case 5:
                            s += "Queen";
                            break;
                        case 6:
                            s += "Rook";
                            break;
                        default:
                            break outer;
                    }
                    labeli.setBorder(null);
                    labeli.setIcon(new ImageIcon(GamePage.MAP_STRING.get(s)));
                }
            }
        }
    }

    /**
     * A method to get the label name when row and column INDICES are passed
     *
     * @param i row number index
     * @param j column number index
     * @return
     */
    private static String intToString(int i, int j) {
        String s = "";
        switch (j + 1) {
            case 1:
                s += "a";
                break;
            case 2:
                s += "b";
                break;
            case 3:
                s += "c";
                break;
            case 4:
                s += "d";
                break;
            case 5:
                s += "e";
                break;
            case 6:
                s += "f";
                break;
            case 7:
                s += "g";
                break;
            case 8:
                s += "h";
                break;

        }
        s += (i + 1);
        return s;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GamePage().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a1;
    private javax.swing.JLabel a2;
    private javax.swing.JLabel a3;
    private javax.swing.JLabel a4;
    private javax.swing.JLabel a5;
    private javax.swing.JLabel a6;
    private javax.swing.JLabel a7;
    private javax.swing.JLabel a8;
    private javax.swing.JLabel b1;
    private javax.swing.JLabel b2;
    private javax.swing.JLabel b3;
    private javax.swing.JLabel b4;
    private javax.swing.JLabel b5;
    private javax.swing.JLabel b6;
    private javax.swing.JLabel b7;
    private javax.swing.JLabel b8;
    private javax.swing.JMenuItem blackWhite;
    private javax.swing.JMenuItem blueBlush;
    public static javax.swing.JTextArea bt1;
    private javax.swing.JLabel c1;
    private javax.swing.JLabel c2;
    private javax.swing.JLabel c3;
    private javax.swing.JLabel c4;
    private javax.swing.JLabel c5;
    private javax.swing.JLabel c6;
    private javax.swing.JLabel c7;
    private javax.swing.JLabel c8;
    private javax.swing.JMenuItem custom;
    private javax.swing.JLabel d1;
    private javax.swing.JLabel d2;
    private javax.swing.JLabel d3;
    private javax.swing.JLabel d4;
    private javax.swing.JLabel d5;
    private javax.swing.JLabel d6;
    private javax.swing.JLabel d7;
    private javax.swing.JLabel d8;
    private javax.swing.JMenuItem defaultColor;
    private javax.swing.JLabel e1;
    private javax.swing.JLabel e2;
    private javax.swing.JLabel e3;
    private javax.swing.JLabel e4;
    private javax.swing.JLabel e5;
    private javax.swing.JLabel e6;
    private javax.swing.JLabel e7;
    private javax.swing.JLabel e8;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JLabel f1;
    private javax.swing.JLabel f2;
    private javax.swing.JLabel f3;
    private javax.swing.JLabel f4;
    private javax.swing.JLabel f5;
    private javax.swing.JLabel f6;
    private javax.swing.JLabel f7;
    private javax.swing.JLabel f8;
    private javax.swing.JMenu file;
    private javax.swing.JLabel g1;
    private javax.swing.JLabel g2;
    private javax.swing.JLabel g3;
    private javax.swing.JLabel g4;
    private javax.swing.JLabel g5;
    private javax.swing.JLabel g6;
    private javax.swing.JLabel g7;
    private javax.swing.JLabel g8;
    private javax.swing.JMenuItem greenGone;
    private javax.swing.JLabel h1;
    private javax.swing.JLabel h2;
    private javax.swing.JLabel h3;
    private javax.swing.JLabel h4;
    private javax.swing.JLabel h5;
    private javax.swing.JLabel h6;
    private javax.swing.JLabel h7;
    private javax.swing.JLabel h8;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem newGame;
    private javax.swing.JMenuItem restart;
    private javax.swing.JMenuItem undoMenu;
    public static javax.swing.JTextArea wt1;
    private javax.swing.JMenuItem yellowBrown;
    // End of variables declaration//GEN-END:variables
}
